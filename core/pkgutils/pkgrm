#!/bin/zsh
# Copyright (c) 2006-2020 Han Boetes <hboetes@gmail.com>

# Permission to use, copy, modify, and distribute this software
# for any purpose with or without fee is hereby granted, provided
# that the above copyright notice and this permission notice
# appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

source /usr/local/lib/pkgutils.shared

# Noone needs to read what's made by pkgrm.
umask 077

#  Support various errorcodes so pkgmk can use them.
error()
{
    exitcode=$1
    shift
    echo "$n: $*" >&2
    exit $exitcode
}


isinstalled()
{
    [ -e $dbase/$1-footprint ]
    return $?
}


verifypackage()
{
    if [ -f "$dbase/$1-metadata" ]; then
        . $dbase/$1-metadata
        [ -z "$name"    ] && error 1 "no package name defined in $dbase/$1"
        [ -z "$version" ] && error 1 "no version number defined in $dbase/$1"
        [ -z "$release" ] && error 1 "no release number defined in $dbase/$1"
    else
        error 1 "The package \`$1' is not installed."
    fi
}


mktempfiles()
{
    # Make tempfiles.
    DIR=$(mktemp -d /tmp/pkgutils.XXXXXXXXXX) || exit 1
    filesoldpackage=$DIR/filesoldpackage
    dirsoldpackage=$DIR/dirsoldpackage

    if [ -e $dbase/$name-footprint ]; then
        # Conflate files and symlinks etc into $filesoldpackage, therefore:
        # Everything that's not a dir is considered a file.
        awk -F '\t' '/^[^d]/ {print $3}' $dbase/$name-footprint > $filesoldpackage
        awk -F '\t' '/^d/    {print $3}' $dbase/$name-footprint > $dirsoldpackage
    fi

    # remove them in any way the program exits.
    zshexit()
    {
        rm -rf $DIR
    }
}


help()
{
    cat << EOF
usage: $n [options] <package>
options:
  -r, --root <path>   specify alternative installation root
  -v, --version       print version and exit
  -h, --help          print help and exit
EOF
}

dbase()
{
    root=$1
    dbase=$root/var/package
    if [ ! -d $dbase ]; then
        error "database directory $dbase not found."
    fi
}

dbase

while [ $# -gt 0 ]; do
    case $1 in
        -r|--root)
            [ -z $2 ] && error 1 "option \`$1' requires an argument."
            dbase $2
            shift 2
            ;;
        -v|--version)
            version
            ;;
        -h|--help)
            help
            exit 0
            ;;
        -*)
            error "Illegal option: $1"
            exit 1
            ;;
        *)
            [ -n "$2" ] && error 1 "packagename must be the last argument."
            verifypackage $1
            shift
            ;;
    esac
done

rejects=$dbase/rejects

if [ ! -d $dbase ]; then
    error 1 "database directory $dbase not found."
fi

# Should be defined over here.
if [ -z "$name" ]; then
    help
    exit 1
fi

if [ $(id -u) -ne 0 ]; then
    error 1 "Only root can remove packages."
fi

mktempfiles

# Do the actual removing of files and directories.
(
    cd ${root:=/}
    # First remove all the files that are not directories
    cat $filesoldpackage | xargs -r -I % rm -f '%'
    # Then remove all the empty directories provided by this package
    cat $dirsoldpackage | xargs -r -I % rmdir -p '%' > /dev/null 2>&1
    # remove rejects from the package.
    rm -rf $rejects/$name
)

# Run ldconfig if the package contained libraries.
fgrep -q '\.so' $dbase/$name-footprint && ldconfig -R

# Auto post-uninstall infopages.
for i in $(grep -E '^usr/local/info/[^-]*$' $filesoldpackage); do
    # message "removing ${i##*/} info-entry."
    /usr/bin/install-info --delete $root/$i /usr/local/info/dir
done

# Auto post-uninstall for tex packages
if grep -q '^usr/local/share/texmf/' $filesoldpackage; then
    mktexlsr /usr/local/share/texmf/
fi


# For loading the post-uninstall function.
. $dbase/$name-metadata

# Only necesarry for !c4o packages.
rm -f $dbase/$name-footprint $dbase/$name-metadata

# TODO, make this a configurable function.
# Only run post-install if it exists.
typeset -f post-uninstall > /dev/null || exit 0

message "Request to execute these commands with root permissions:"
print '\001\033[31m\001'
typeset -f post-uninstall
question 'Run this post-install script? [y/N]'
case $answer in
    y*|Y*)
        post-uninstall
        exit $?
        ;;
    *)
        exit 1
        ;;
esac

exit 0
